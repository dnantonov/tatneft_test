Реализовать микросервис (restApi).

Реализовать 2 метода:

1. Получение данных
url - /test/service/{id}/{type}
На вход подается {id} и {type}
Считать xlsx файл
Сделать иммитацию использования restApi (get запрос), считать json файл ({id:type})
Объеденить по полю id (xlsx и json)
Отфильтровать по id и type
На выход подается json с "плоской" структурой (пример: [{id, type, name, data}, {}, ...])
Если введен id или type который отсутствует, выводить соответствующее сообщение

2. Редактирование данных (name)
url - /test/service
На вход подается тело
Тело должно содержать [{id: id, name: new_name}, ...]
Редактирование данных, xlsx файл, столбец name
На выход json {"info": "ok"} если успешно для всех id
Если введен id который отсутствует, выводить соответствующее сообщение

Подключить swagger, Название (Микросервис "Тестовый сервис"), описание (Описание тестового сервиса), 
у каждого метода должно присутствовать наименование и описание входящих и выходящих данных.
Сервис должен быть в docker (использовать docker-compose и gunicorn(uwsgi)).

Используемые технологии: python, flask, swagger, docker, gunicorn(uwsgi)
Используемые библиотеки: flask, flask-restful, flasgger, flask-cors, requests, стандартные библиотеки Python, и др.